"""
Django settings for nrccnepal project.

Generated by 'django-admin startproject' using Django 4.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""


from pathlib import Path
import os
from django.contrib.messages import constants as messages


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
# BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))



# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-5mnmy3rv(98w5em!e8s@q=@93td=&_0k6bh)vlj5v-yhw&vo!x'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

ALLOWED_HOSTS = ['127.0.0.1', 'www.one.nrccnepal.org']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    # Installed Apps
    'blog',
    'core',
    

]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'nrccnepal.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'core.context_processors.nav_slugs',
            ],
            'libraries' : {
                'defaultfilters' : 'django.template.defaultfilters',
            }
            
        },
    },
]

WSGI_APPLICATION = 'nrccnepal.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}

# DATABASES = {
#     "default": {
#         "ENGINE": "django.db.backends.mysql",
#         "NAME": "nrccnepa_nrcc",
#         "USER": "nrccnepa_admin",
#         "PASSWORD": "",
#         "HOST": "localhost",
#         "PORT": "3306",
#         # "OPTIONS": {"driver": "ODBC Driver 17 for SQL Server", 
#         # },
#     },
# }

# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Kathmandu'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/

STATIC_ROOT = os.path.join('/home2/nrccnepa/public_html/static') # it's where the static files get copied automatically when we run collectstatic. It is useless during developement and only required for deployment. Django looks for static files inside each app's directory and serves them automatically in development. This is done by manage.py runserver whene DEBUG=True
STATIC_URL = '/static/'
# When on deployment Django copies static files from all the apps we have to STATIC_ROOT and Nginx looks for static files in that folder


# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


# We put static files in STATICFILES_DIRS or <APP_NAME>/static/. It is list of folders where Django will search for additional static files aside from the static folder of each app installed
STATICFILES_DIRS = [
    BASE_DIR /"static",
    '/var/www/staticfiles/',
    # '/home2/nrccnepa/public_html/static'
    
]

# STATIC_ROOT = os.path.join(BASE_DIR, 'static')

# Managing Media
MEDIA_ROOT = os.path.join(BASE_DIR, 'media') # It is where our user uploaded files image files (via forms or admin) gets stored
MEDIA_URL = '/media/'

# Message tag to be modified
MESSAGE_TAGS = {
    messages.ERROR: 'danger'
}

# # For sending mail to the subscribers (Not used currently)
# EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
# EMAIL_HOST = 'smtp.gmail.com'
# EMAIL_USE_TLS = True
# EMAIL_PORTS = 587
# EMAIL_HOST_USER = ''
# EMAIL_HOST_PASSWORD = ''