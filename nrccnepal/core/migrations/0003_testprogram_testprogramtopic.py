# Generated by Django 4.1.7 on 2024-01-31 14:55

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ("core", "0002_programs_alter_contact_phone"),
    ]

    operations = [
        migrations.CreateModel(
            name="TestProgram",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        help_text="Program Title in less than 500 characters",
                        max_length=500,
                    ),
                ),
                (
                    "time_duration",
                    models.CharField(help_text="Program Duration", max_length=100),
                ),
                (
                    "readtime",
                    models.CharField(
                        help_text="Expected Read Time of this Blog", max_length=50
                    ),
                ),
                (
                    "short_description",
                    models.CharField(
                        help_text="Short Description in about one or two line",
                        max_length=1000,
                    ),
                ),
                (
                    "program_featured_img",
                    models.ImageField(
                        blank=True, null=True, upload_to="images/test_uploads/"
                    ),
                ),
                (
                    "program_tags",
                    models.CharField(
                        help_text="Mention some tags separated by comma (,)",
                        max_length=500,
                    ),
                ),
                ("slug", models.SlugField(max_length=600, unique=True)),
                ("published_date", models.DateField(auto_now_add=True)),
                ("updated_datetime", models.DateTimeField(auto_now=True)),
                (
                    "priority_in_major_programs_list",
                    models.IntegerField(
                        choices=[
                            (0, "Not displayed on homepage"),
                            (1, "Display in first column"),
                            (2, "Display in second column"),
                            (3, "Display in third column"),
                        ],
                        default=0,
                        help_text="Choose 0 if you don't want this program to display in homepage, else choose 1, 2, or 3 priority",
                    ),
                ),
                ("priority_in_programs_list", models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name="TestProgramTopic",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("topic", models.CharField(help_text="Write a topic", max_length=500)),
                ("topic_order", models.IntegerField(blank=True, default=0)),
                (
                    "topic_detail_first_paragraph",
                    models.TextField(
                        blank=True, help_text="First paragraph", null=True
                    ),
                ),
                (
                    "topic_detail_first_bullet_points",
                    models.TextField(
                        blank=True,
                        help_text="Write bullet points in a single line separated by # ",
                        null=True,
                    ),
                ),
                (
                    "topic_detail_first_highlighting_text",
                    models.TextField(blank=True, null=True),
                ),
                (
                    "topic_detail_first_img",
                    models.ImageField(
                        blank=True, null=True, upload_to="images/test_uploads/"
                    ),
                ),
                (
                    "topic_detail_first_img_caption",
                    models.CharField(
                        help_text="Write caption for the image in less than 500 characters",
                        max_length=500,
                    ),
                ),
                (
                    "topic_detail_first_video_embed_source",
                    models.CharField(
                        help_text="Write the source of the video you want to embed. See the 'src' under iframe tag",
                        max_length=200,
                    ),
                ),
                (
                    "topic_detail_second_paragraph",
                    models.TextField(
                        blank=True, help_text="Second Paragraph if exists", null=True
                    ),
                ),
                (
                    "topic_detail_second_bullet_points",
                    models.TextField(
                        blank=True,
                        help_text="Write bullet points in a single line separated by # ",
                        null=True,
                    ),
                ),
                (
                    "topic_detail_second_highlighting_text",
                    models.TextField(blank=True, null=True),
                ),
                (
                    "topic_detail_second_img",
                    models.ImageField(
                        blank=True, null=True, upload_to="images/test_uploads"
                    ),
                ),
                (
                    "topic_detail_second_img_caption",
                    models.CharField(
                        max_length=500,
                        verbose_name="Write caption for the image in less than 500 characters",
                    ),
                ),
                (
                    "topic_detail_second_video_embed_source",
                    models.CharField(
                        max_length=200,
                        verbose_name="Write the source of the video you want to embed. See the 'src' under iframe tag",
                    ),
                ),
                (
                    "topic_detail_third_paragraph",
                    models.TextField(
                        blank=True, help_text="Third paragraph if exists", null=True
                    ),
                ),
                (
                    "topic_detail_third_bullet_points",
                    models.TextField(
                        blank=True,
                        help_text="Write bullet points in a single line separated by # ",
                        null=True,
                    ),
                ),
                (
                    "topic_detail_third_highlighting_text",
                    models.TextField(blank=True, null=True),
                ),
                (
                    "topic_detail_third_img",
                    models.ImageField(
                        blank=True, null=True, upload_to="images/test_uploads"
                    ),
                ),
                (
                    "topic_detail_third_img_caption",
                    models.CharField(
                        max_length=500,
                        verbose_name="Write caption for the image in less than 500 characters",
                    ),
                ),
                (
                    "topic_detail_third_video_embed_source",
                    models.CharField(
                        max_length=200,
                        verbose_name="Write the source of the video you want to embed. See the 'src' under iframe tag",
                    ),
                ),
                (
                    "program_title",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="core.testprogram",
                    ),
                ),
            ],
        ),
    ]
